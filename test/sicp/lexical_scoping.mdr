#include "E:\Projects\Midori\MidoriUtil\MidoriUtil.mdr"

fixed main = fn() : Unit
{
	fixed abs = fn(fixed x : Frac) : Frac
	{
		return x < 0.0 ? -x : x;
	};

	fixed square = fn(fixed x : Frac) : Frac
	{
		return x * x;
	};

	fixed sqrt = fn(fixed x : Frac) : Frac
	{
		fixed is_good_enough = fn(fixed guess : Frac) : Bool
		{
			return abs(square(guess) - x) < 0.001;
		};

		fixed improve = fn(fixed guess : Frac) : Frac
		{
			return (guess + x / guess) / 2.0;
		};

		fixed sqrt_iter = fn(fixed guess : Frac) : Frac
		{
			return is_good_enough(guess) ? guess : sqrt_iter(improve(guess));
		};

		return sqrt_iter(1.0);
	};

	return IO::PrintLine(sqrt(2.0) as Text);
};